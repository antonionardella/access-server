version: '3'
services:
  # vd-iota-webui-nodejs:
  #   build:
  #     context: ./nodejs
  #     dockerfile: ./docker/iota/Dockerfile
  #   image: vd-iota-webui-nodejs
  #   network_mode: host
  #   volumes:
  #     - "./nodejs/data:/home/node/app/data"
  #     - "./nodejs/config/iota:/home/node/app/config/iota"
  #   container_name: vd-iota-webui-nodejs
  #   restart: always
  #   env_file:
      # - "./nodejs/.env"

  # vd-bc-webui-nodejs:
  #   build:
  #     context: ./nodejs
  #     dockerfile: ./docker/bc/Dockerfile
  #   image: vd-bc-webui-nodejs
  #   network_mode: host
  #   volumes:
  #     - "./nodejs/config/bc:/home/node/app/config/bc"
  #   container_name: vd-bc-webui-nodejs
  #   restart: always
  #   env_file:
  #     - "./nodejs/.env"

  pave-vd-webui-nodejs:
    build:
      context: ./nodejs
      dockerfile: ./docker/pave/Dockerfile
    image: vd-bc-webui-nodejs
    network_mode: host
    volumes:
      - "./nodejs/config/pave:/home/node/app/config"
      - "pave-vd-webui-data:/home/node/app/data"
    container_name: pave-vd-webui-nodejs
    restart: always
    env_file:
      - "./nodejs/.env"

  vd-webui-nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: vd-webui-nginx
    container_name: vd-webui-nginx
    # volumes:
    #   - "./nginx:/usr/share/nginx/html"
    restart: always
    depends_on:
      # - vd-iota-webui-nodejs
      - pave-vd-webui-nodejs
    ports:
      - "6001:80"
      - "8881:80"
      - "80:80"

volumes:
  pave-vd-webui-data:
    driver: local
